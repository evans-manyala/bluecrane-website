
services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-it_service}
      MYSQL_USER: ${MYSQL_USER:-it_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-it_password}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    ports:
      - "3307:3306"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-it_service}
      DB_USER: ${MYSQL_USER:-it_user}
      DB_PASS: ${MYSQL_PASSWORD:-it_password}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
      ADMIN_USER: ${ADMIN_USER:-admin}
      ADMIN_PASS: ${ADMIN_PASS:-change-me}
      JWT_SECRET: ${JWT_SECRET:-change-this-secret}
      JWT_EXPIRE_MIN: ${JWT_EXPIRE_MIN:-240}
    depends_on:
      - db
    ports:
      - "8000:8000"

  web:
    build:
      context: .
    # Uses the multi-stage Dockerfile at web/Dockerfile
      dockerfile: web/Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  db_data:
